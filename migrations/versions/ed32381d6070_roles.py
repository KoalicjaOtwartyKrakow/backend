"""roles

Revision ID: ed32381d6070
Revises: 1668bb143660
Create Date: 2022-04-19 00:30:46.471077

"""
from alembic import op

from kokon.utils.auditing import sync_trigger

# revision identifiers, used by Alembic.
revision = "ed32381d6070"
down_revision = "1668bb143660"
branch_labels = None
depends_on = None


ROLE_NAME = "app"


def upgrade():
    """
    CREATE USER app_user WITH PASSWORD '123';
    GRANT app TO app_user;
    """
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    # don't create the role for test db
    if "test" in conn.engine.url.database:
        return

    op.execute(f"CREATE ROLE {ROLE_NAME};")
    op.execute(
        f"""
        DO
        $$
        BEGIN
            execute format('GRANT CONNECT ON DATABASE %I TO {ROLE_NAME}', current_database());
            execute format('GRANT TEMPORARY ON DATABASE %I TO {ROLE_NAME}', current_database());
        END;
        $$;
        """
    )

    op.execute(
        f"""
        GRANT USAGE ON SCHEMA public TO {ROLE_NAME};
        GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO {ROLE_NAME};
        REVOKE ALL ON guests_version FROM {ROLE_NAME};
        REVOKE ALL ON accommodation_units_version FROM {ROLE_NAME};
        REVOKE ALL ON transaction FROM {ROLE_NAME};
        GRANT SELECT ON TABLE guests_version TO {ROLE_NAME};
        GRANT SELECT ON TABLE accommodation_units_version TO {ROLE_NAME};
        GRANT SELECT ON TABLE transaction TO {ROLE_NAME};
        GRANT INSERT ON TABLE guests_version TO {ROLE_NAME};
        GRANT INSERT ON TABLE accommodation_units_version TO {ROLE_NAME};
        GRANT INSERT ON TABLE transaction TO {ROLE_NAME};
        GRANT EXECUTE ON FUNCTION guests_audit() TO {ROLE_NAME};
        GRANT EXECUTE ON FUNCTION accommodation_units_audit() TO {ROLE_NAME};
        GRANT EXECUTE ON FUNCTION transaction_temp_table_generator() TO {ROLE_NAME};
        GRANT EXECUTE ON FUNCTION update_claimed_at() TO {ROLE_NAME};
        -- default roles assigned to new objects in future
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO {ROLE_NAME};
        """
    )

    sync_trigger(conn, "guests_version")
    sync_trigger(conn, "accommodation_units_version")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    if "test" in conn.engine.url.database:
        return

    op.execute(f"DROP OWNED BY {ROLE_NAME};")
    op.execute(f"DROP ROLE {ROLE_NAME};")
    # ### end Alembic commands ###
