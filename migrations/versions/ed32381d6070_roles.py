"""roles

Revision ID: ed32381d6070
Revises: 1668bb143660
Create Date: 2022-04-19 00:30:46.471077

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "ed32381d6070"
down_revision = "1668bb143660"
branch_labels = None
depends_on = None


ROLE_NAME = "app"


def upgrade():
    """
    CREATE USER app_user WITH PASSWORD '123';
    GRANT app TO app_user;
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        f"""
    DO
    $do$
    BEGIN
        IF EXISTS (SELECT FROM pg_catalog.pg_roles WHERE  rolname = '{ROLE_NAME}')
        THEN
            RAISE NOTICE 'Role "{ROLE_NAME}" already exists. Skipping.';
        ELSE
            CREATE ROLE {ROLE_NAME};
        END IF;
    END
    $do$;
    """
    )
    op.execute(
        f"""
    do
    $$ 
    begin
        execute format('GRANT CONNECT ON DATABASE %I TO {ROLE_NAME}', current_database());
    end;
    $$;
    """
    )

    op.execute(
        f"""    
    GRANT USAGE ON SCHEMA public TO {ROLE_NAME};
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO {ROLE_NAME};
    REVOKE ALL PRIVILEGES ON guests_version FROM {ROLE_NAME};
    REVOKE ALL PRIVILEGES ON accommodation_units_version FROM {ROLE_NAME};
    REVOKE ALL PRIVILEGES ON transaction FROM {ROLE_NAME};
    GRANT SELECT ON guests_version TO {ROLE_NAME};
    GRANT SELECT ON accommodation_units_version TO {ROLE_NAME};
    GRANT SELECT ON transaction TO {ROLE_NAME};
    -- default roles assigned to new objects in future
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO {ROLE_NAME};
    """
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"DROP OWNED BY {ROLE_NAME};")
    op.execute(f"DROP ROLE {ROLE_NAME};")
    # ### end Alembic commands ###
