"""guest_versioned

Revision ID: ffa688ef7703
Revises: 79ba71ec88e6
Create Date: 2022-03-24 15:39:07.062548

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ffa688ef7703"
down_revision = "79ba71ec88e6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accommodation_units_version",
        sa.Column(
            "guid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "host_id",
            postgresql.UUID(as_uuid=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("city", sa.String(length=50), autoincrement=False, nullable=True),
        sa.Column("zip", sa.String(length=10), autoincrement=False, nullable=False),
        sa.Column(
            "voivodeship",
            postgresql.ENUM(name="voivodeship", create_type=False),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "address_line", sa.String(length=512), autoincrement=False, nullable=False
        ),
        sa.Column("vacancies_total", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("pets_present", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("pets_accepted", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column(
            "disabled_people_friendly", sa.Boolean(), autoincrement=False, nullable=True
        ),
        sa.Column("lgbt_friendly", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column(
            "parking_place_available", sa.Boolean(), autoincrement=False, nullable=True
        ),
        sa.Column("owner_comments", sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            "easy_ambulance_access", sa.Boolean(), autoincrement=False, nullable=True
        ),
        sa.Column("vacancies_free", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("staff_comments", sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(name="verificationstatus", create_type=False),
            server_default="CREATED",
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("system_comments", sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("guid", "transaction_id"),
    )
    op.create_index(
        op.f("ix_accommodation_units_version_end_transaction_id"),
        "accommodation_units_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_accommodation_units_version_operation_type"),
        "accommodation_units_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_accommodation_units_version_transaction_id"),
        "accommodation_units_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "guests_version",
        sa.Column(
            "guid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "full_name", sa.String(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("email", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "phone_number", sa.String(length=20), autoincrement=False, nullable=False
        ),
        sa.Column(
            "is_agent",
            sa.Boolean(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "document_number", sa.String(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "people_in_group",
            sa.Integer(),
            server_default=sa.text("1"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "adult_male_count",
            sa.Integer(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "adult_female_count",
            sa.Integer(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "children_ages",
            postgresql.ARRAY(sa.Integer()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "have_pets",
            sa.Boolean(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "pets_description",
            sa.String(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("special_needs", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("food_allergies", sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            "meat_free_diet",
            sa.Boolean(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "gluten_free_diet",
            sa.Boolean(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "lactose_free_diet",
            sa.Boolean(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "finance_status", sa.String(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "how_long_to_stay",
            sa.String(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "desired_destination",
            sa.String(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "priority_status",
            postgresql.ENUM(name="guestprioritystatus", create_type=False),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "priority_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("staff_comments", sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            "verification_status",
            postgresql.ENUM(name="verificationstatus", create_type=False),
            server_default="CREATED",
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("system_comments", sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "claimed_by_id",
            postgresql.UUID(as_uuid=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "claimed_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "accommodation_unit_id",
            postgresql.UUID(as_uuid=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("guid", "transaction_id"),
    )
    op.create_index(
        op.f("ix_guests_version_end_transaction_id"),
        "guests_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_guests_version_operation_type"),
        "guests_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_guests_version_transaction_id"),
        "guests_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "transaction",
        sa.Column("issued_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("remote_addr", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transaction")
    op.drop_index(op.f("ix_guests_version_transaction_id"), table_name="guests_version")
    op.drop_index(op.f("ix_guests_version_operation_type"), table_name="guests_version")
    op.drop_index(
        op.f("ix_guests_version_end_transaction_id"), table_name="guests_version"
    )
    op.drop_table("guests_version")
    op.drop_index(
        op.f("ix_accommodation_units_version_transaction_id"),
        table_name="accommodation_units_version",
    )
    op.drop_index(
        op.f("ix_accommodation_units_version_operation_type"),
        table_name="accommodation_units_version",
    )
    op.drop_index(
        op.f("ix_accommodation_units_version_end_transaction_id"),
        table_name="accommodation_units_version",
    )
    op.drop_table("accommodation_units_version")
    # ### end Alembic commands ###
